/**
 * @param {character[][]} grid
 * @return {boolean}
 */
var hasValidPath = function (grid) {
    let m = grid.length, n = grid[0].length
    if ((m + n - 1) % 2 !== 0) return false
    if (grid[0][0] === ')' || grid[m - 1][n - 1] === '(') return false
    let map = new Map()
    const helper = (i, j, l) => {
        let key = `${i}_${j}_${l}`
        if (map.has(key)) {
            return map.get(key)
        }
        grid[i][j] === '(' ? l++ : l--
        if (i === m - 1 && j === n - 1) {
            return l === 0
        } else {
            if (l < 0) {
                map.set(key, false)
                return false
            }
            if ((i + j + 1) * 2 > (m + n - 1) && l * 2 > (m + n - 1)) {
                map.set(key, false)
                return false
            }
            let res1 = false, res2 = false
            if (i + 1 < m) {
                res1 = helper(i + 1, j, l)
            }
            if (j + 1 < n) {
                res2 = helper(i, j + 1, l)
            }
            map.set(key, res1 || res2)
            return map.get(key)
        }
    }
    return helper(0, 0, 0)
};


var grid = [
    ["(", "(", "(", "(", "(", ")", ")", "(", ")", ")", "(", ")", ")", "(", ")", "(", "(", ")", ")", "(", ")", "(", ")", ")", "(", ")", ")", ")", ")", "(", ")", "(", "("],
    ["(", ")", ")", "(", "(", ")", ")", ")", ")", "(", ")", "(", ")", "(", ")", "(", "(", ")", ")", "(", "(", "(", "(", ")", ")", ")", ")", ")", "(", "(", ")", "(", "("],
    [")", ")", "(", "(", ")", ")", ")", ")", "(", ")", "(", ")", ")", ")", "(", "(", ")", "(", ")", "(", "(", "(", ")", ")", ")", ")", ")", ")", ")", ")", ")", "(", "("],
    ["(", "(", "(", ")", "(", ")", ")", ")", "(", ")", "(", "(", "(", ")", "(", ")", "(", ")", "(", ")", "(", ")", "(", ")", ")", ")", "(", "(", ")", "(", ")", ")", ")"],
    [")", "(", ")", "(", ")", ")", ")", ")", "(", "(", "(", "(", ")", "(", ")", "(", "(", "(", "(", "(", ")", "(", "(", ")", ")", "(", "(", "(", ")", "(", ")", ")", "("],
    [")", ")", ")", "(", ")", ")", ")", "(", "(", ")", ")", "(", "(", "(", "(", ")", "(", "(", ")", ")", "(", ")", ")", ")", "(", ")", ")", "(", ")", ")", "(", "(", "("],
    [")", "(", ")", "(", "(", ")", ")", "(", ")", ")", ")", "(", "(", "(", ")", "(", "(", "(", ")", "(", ")", "(", ")", ")", ")", ")", ")", "(", ")", ")", "(", "(", ")"],
    ["(", "(", ")", ")", "(", ")", ")", "(", "(", "(", "(", ")", "(", ")", "(", "(", "(", "(", "(", "(", ")", "(", ")", "(", ")", ")", "(", "(", "(", ")", "(", "(", ")"],
    [")", ")", "(", "(", ")", ")", "(", "(", "(", "(", "(", "(", "(", ")", ")", "(", "(", "(", ")", ")", "(", ")", "(", "(", ")", ")", "(", ")", ")", "(", ")", "(", "("],
    [")", ")", ")", ")", "(", ")", ")", "(", "(", "(", "(", ")", ")", ")", "(", ")", ")", ")", ")", ")", ")", "(", "(", "(", "(", ")", ")", ")", ")", "(", "(", "(", ")"]
]
console.time(1)
let res = hasValidPath(grid)
console.timeEnd(1)
console.log('res :>> ', res);